xor(a, b) :: Bool Bool -> Bool {
	/*return (a || b) && !(a && b);*/
}

implies(a, b) :: Bool Bool -> Bool {
	//if (!a) {return True;}
	else {return b;}
}
//       /*
equals(a, b) :: [a] [a] -> Bool {
    if (isEmpty(a) && isEmpty(b)) { return True; }
    if (isEmpty(a) || isEmpty(b)) { return False; }
    return (a.hd == b.hd) && equals (a.tl, b.tl);
}
*/

/*

// */